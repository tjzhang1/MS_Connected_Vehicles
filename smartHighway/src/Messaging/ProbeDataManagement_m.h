//
// Generated file, do not edit! Created by nedtool 5.7 from Messaging/ProbeDataManagement.msg.
//

#ifndef __VEINS_PROBEDATAMANAGEMENT_M_H
#define __VEINS_PROBEDATAMANAGEMENT_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0507
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// cplusplus {{
#include "veins/modules/messages/BaseFrame1609_4_m.h"
#include "veins/base/utils/SimpleAddress.h"
// }}


namespace veins {

/**
 * Class generated from <tt>Messaging/ProbeDataManagement.msg:26</tt> by nedtool.
 * <pre>
 * packet ProbeDataManagement extends BaseFrame1609_4
 * {
 *     bool senderPos;
 *     bool senderSpeed;
 *     bool vehicleTypeID;
 * }
 * </pre>
 */
class ProbeDataManagement : public ::veins::BaseFrame1609_4
{
  protected:
    bool senderPos;
    bool senderSpeed;
    bool vehicleTypeID;

  private:
    void copy(const ProbeDataManagement& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const ProbeDataManagement&);

  public:
    ProbeDataManagement(const char *name=nullptr, short kind=0);
    ProbeDataManagement(const ProbeDataManagement& other);
    virtual ~ProbeDataManagement();
    ProbeDataManagement& operator=(const ProbeDataManagement& other);
    virtual ProbeDataManagement *dup() const override {return new ProbeDataManagement(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual bool getSenderPos() const;
    virtual void setSenderPos(bool senderPos);
    virtual bool getSenderSpeed() const;
    virtual void setSenderSpeed(bool senderSpeed);
    virtual bool getVehicleTypeID() const;
    virtual void setVehicleTypeID(bool vehicleTypeID);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ProbeDataManagement& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ProbeDataManagement& obj) {obj.parsimUnpack(b);}

} // namespace veins

#endif // ifndef __VEINS_PROBEDATAMANAGEMENT_M_H

