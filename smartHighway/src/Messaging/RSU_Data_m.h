//
// Generated file, do not edit! Created by nedtool 5.7 from Messaging/RSU_Data.msg.
//

#ifndef __RSU_DATA_M_H
#define __RSU_DATA_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0507
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Struct generated from Messaging/RSU_Data.msg:19 by nedtool.
 */
struct VehicleData
{
    VehicleData();
    ::omnetpp::opp_string vehicleId;
    double speed;
    double position[2];
};

// helpers for local use
void __doPacking(omnetpp::cCommBuffer *b, const VehicleData& a);
void __doUnpacking(omnetpp::cCommBuffer *b, VehicleData& a);

inline void doParsimPacking(omnetpp::cCommBuffer *b, const VehicleData& obj) { __doPacking(b, obj); }
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, VehicleData& obj) { __doUnpacking(b, obj); }

/**
 * Class generated from <tt>Messaging/RSU_Data.msg:25</tt> by nedtool.
 * <pre>
 * message RSU_Data
 * {
 *     string rsuId;
 *     int lastStepOccupancy;
 *     double lastStepMeanSpeed;
 *     int lastStepHaltingVehiclesNumber;
 *     VehicleData vehicles[];
 * }
 * </pre>
 */
class RSU_Data : public ::omnetpp::cMessage
{
  protected:
    ::omnetpp::opp_string rsuId;
    int lastStepOccupancy;
    double lastStepMeanSpeed;
    int lastStepHaltingVehiclesNumber;
    VehicleData *vehicles; // array ptr
    unsigned int vehicles_arraysize;

  private:
    void copy(const RSU_Data& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const RSU_Data&);

  public:
    RSU_Data(const char *name=nullptr, short kind=0);
    RSU_Data(const RSU_Data& other);
    virtual ~RSU_Data();
    RSU_Data& operator=(const RSU_Data& other);
    virtual RSU_Data *dup() const override {return new RSU_Data(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const char * getRsuId() const;
    virtual void setRsuId(const char * rsuId);
    virtual int getLastStepOccupancy() const;
    virtual void setLastStepOccupancy(int lastStepOccupancy);
    virtual double getLastStepMeanSpeed() const;
    virtual void setLastStepMeanSpeed(double lastStepMeanSpeed);
    virtual int getLastStepHaltingVehiclesNumber() const;
    virtual void setLastStepHaltingVehiclesNumber(int lastStepHaltingVehiclesNumber);
    virtual void setVehiclesArraySize(unsigned int size);
    virtual unsigned int getVehiclesArraySize() const;
    virtual VehicleData& getVehicles(unsigned int k);
    virtual const VehicleData& getVehicles(unsigned int k) const {return const_cast<RSU_Data*>(this)->getVehicles(k);}
    virtual void setVehicles(unsigned int k, const VehicleData& vehicles);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const RSU_Data& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, RSU_Data& obj) {obj.parsimUnpack(b);}


#endif // ifndef __RSU_DATA_M_H

